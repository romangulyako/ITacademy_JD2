<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/aop
  http://www.springframework.org/schema/aop/spring-aop.xsd
  http://www.springframework.org/schema/tx
                  http://www.springframework.org/schema/tx/spring-tx.xsd

       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-init-method="init" default-destroy-method="destroy"
>

    <context:annotation-config/>
    <context:component-scan base-package="itacademy.task.aop"/>
    <aop:aspectj-autoproxy/>

    <context:component-scan base-package="itacademy.spring_hibernate.dao"/>
    <context:component-scan base-package="itacademy.spring_hibernate"/>
    <context:component-scan base-package="itacademy.spring_hibernate.service"/>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="url"
                  value="jdbc:mysql://localhost:3306/spring_hibernate_integration?createDatabaseIfNotExist=true"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <property name="initialSize" value="5"/>
        <property name="maxTotal" value="20"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceUnitName" value="jpa-unit"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan">
            <list>
                <value>itacademy.spring_hibernate.entity</value>
            </list>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL55Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!--bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="txManager"/>
    </bean-->

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="*"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor pointcut="execution(* itacademy.spring_hibernate.service.IService.*(..))"
                     advice-ref="txAdvice"/>
    </aop:config>


    <!--bean id="emailSender" class="itacademy.EmailSender">
        <property name="address" value="Minsk"/>
    </bean>

    <bean id="serviceSender" class="itacademy.SenderService"
          p:sender="#{emailSender}">
    </bean>

    <bean id="notifier" class="itacademy.aop.Notification">
        <property name="name" value="#{emailSender.address}"/>
    </bean>

    <bean id="logger" class="itacademy.aop.LogTimer"/>

    <bean id="person" class="itacademy.Person" scope="prototype"
          p:name="Petr"
          p:emailSender-ref="emailSender"
          init-method="init"
          destroy-method="destroy"
    />


    <bean id="constructorBean" class="itacademy.ConstructorBean">
        <constructor-arg index="0" value="#{emailSender.address}"/>
        <property name="stringList">
            <list>
                <value>Roman</value>
                <value>Simon</value>
                <value>Daniil</value>
                <value>Sergey</value>
            </list>
        </property>
        <property name="map">
            <map>
                <entry key="1" value="Roman"/>
                <entry key="2" value="Simon"/>
                <entry key="3" value="Daniil"/>
                <entry key="4" value="Sergey"/>
            </map>
        </property>
    </bean>

    <bean id="addressHome" class="itacademy.autowired.AddressHome"
          p:id="1" p:city="Minsk" p:street="Brovki" p:house="56"/>

    <bean id="address2" class="itacademy.autowired.Address"
          p:id="1" p:city="Minsk" p:street="Brovki" p:house="55">
        <qualifier value="addressValue"/>
    </bean>

    <bean id="personAutowired" class="itacademy.autowired.Person" scope="prototype"
          p:id="1" p:name="Petr" p:surname="Petrov"/>

    <Для задания на занятии>
    <bean id="petrolEngine" class="itacademy.task.cars.PetrolEngine"
          p:cylindersCount="#{4}" p:volume="#{1.6}" p:manufacturer="Mercedes-Benz">
        <qualifier value="defaultEngine"/>
    </bean>

    <bean id="gasEngine" class="itacademy.task.cars.GasEngine"
          p:cylindersCount="#{4}" p:volume="#{1.4}" p:manufacturer="Reno">

    </bean>

    <bean id="car" class="itacademy.task.cars.Car" scope="prototype"
          p:vin="111" p:model="Mercedes" p:type="sedan"/-->

    <!--aop:config>
        <aop:aspect id="note" ref="notifier">
            <aop:pointcut id="advice" expression="execution(* itacademy.SenderService.send(..))"/>
            <aop:after method="notifyAfter" pointcut-ref="advice"/>
            <aop:around method="notifyBefore" pointcut-ref="advice"/>
        </aop:aspect>
        <aop:aspect id="note" ref="logger">
            <aop:pointcut id="advice" expression="execution(* itacademy.SenderService.send(String))"/>
            <aop:before method="logStart" pointcut-ref="advice"/>
            <aop:after method="logEnd" pointcut-ref="advice"/>
        </aop:aspect>
    </aop:config-->
</beans>